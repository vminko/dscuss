#!/usr/bin/expect -f
#
# Test assertion: if peer B is banned by peer A, then handshaking between peers A
# and B will fail.
#
# This file is part of Dscuss.
# Copyright (C) 2018  Vitaly Minko
# 
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.

source testbed.exp

say "Starting Adam's peer"
spawn ../main -config "$tmp_dir/1"
set adam_id $spawn_id
expect "> "
send  "login adam\r"
expect "> "
send "whoami\r"
expect -re "adam (.*)\r\n"

say "Banning Eve"
send "ban jNhpT2bYG/YQR3Dejo69mREhcXVWt0jnx1fE8r1ql7E= SPAM\r"
expect "Enter optional comment: "
send "Testing handshaking with banned peers\r"
expect "> "

say "Starting Eve's peer"
spawn ../main -config "$tmp_dir/2"
set eve_id $spawn_id
expect "> "
send "login eve\r"
expect "> "
send "whoami\r"
expect -re "eve (.*)\r\n"

say "Giving peers some time to perform handshaking"
sleep $timeout

say "Checking whether Adam and Eve have handshaked"
set spawn_id $adam_id
send "lspeers\r"
expect {
    "There are no peers connected" {}
    -re "There is one connected peer.*is Handshaking.*" {}
    -re "There are two connected peers.*is Handshaking.*is Handshaking.*" {}
    -re "eve-.* is Idle\r\n" { fail }
}
set spawn_id $eve_id
send "lspeers\r"
expect {
    "There are no peers connected" {}
    -re "There is one connected peer.*is Handshaking.*" {}
    -re "There are two connected peers.*is Handshaking.*is Handshaking.*" {}
    -re "adam-.* is Idle\r\n" { fail }
}

say "Stopping all peers"
set spawn_id $adam_id
send "exit\r"
expect eof
wait
set spawn_id $eve_id
send "exit\r"
expect eof
wait
pass
